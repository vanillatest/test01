# -*- mode: ruby -*-
# vi: set ft=ruby :


Vagrant.configure(2) do |config|

  # 1 sshkey for each os
  config.ssh.insert_key = false
  config.vm.box_check_update = false

  config.vm.define "be1" do |be1|
    config.vm.hostname = "be1"
    be1.vm.box = "hashicorp/precise32"
    #be1.vm.box = "dreamscapes/archlinux"
    #be1.vm.box = "terrywang/archlinux"
    #be1.vm.network "forwarded_port", guest: 22, host:10122, auto_correct: true
    be1.vm.network "forwarded_port", guest:80, host: 10180
    be1.vm.network "forwarded_port", guest:443,host:10143
    be1.vm.network "private_network", type: "dhcp", auto_config: true
    be1.vm.network "public_network", bridge: "eth1", auto_config: true
    config.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.memory = "512"
    end
  end

  config.vm.define "be2" do |be2|
    config.vm.hostname = "be2"
    be2.vm.box = "hashicorp/precise32"
    ##be2.vm.box = "dreamscapes/archlinux"
    #be2.vm.box = "terrywang/archlinux"
    #be2.vm.network "forwarded_port", guest: 22, host:10123, auto_correct: true
    be2.vm.network "forwarded_port", guest:80, host: 10280
    be2.vm.network "forwarded_port", guest:443,host:10243
    #be2.vm.network "private_network", type: "dhcp", auto_config: true
    be2.vm.network "public_network", bridge: "eth1", auto_config: true
    config.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.memory = "512"
    end
  end

  config.vm.define "fe1" do |fe1|
    config.vm.hostname = "fe1"
    fe1.vm.box = "hashicorp/precise32"
    #fe1.vm.box = "dreamscapes/archlinux"
    #fe1.vm.box = "terrywang/archlinux"
    #fe1.vm.network "forwarded_port", guest: 22, host:10124, auto_correct: true
    fe1.vm.network "forwarded_port", guest:80, host: 8080
    fe1.vm.network "forwarded_port", guest:443,host: 8443
    #fe1.vm.network "private_network", type: "dhcp", auto_config: true
    fe1.vm.network "public_network", bridge: "eth0", auto_config: true
    fe1.vm.network "public_network", bridge: "eth1", auto_config: true
    #fe1.vm.network "private_network", ip: "192.168.2.151", auto_config: false
    config.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.memory = "512"
    end

    fe1.vm.provision "ansible" do |ans|
      ans.limit = 'all'
      ans.playbook = "playbook.yml"
      ans.groups = {
        "be" => ["be1","be2"],
        #"be" => ["be2"],
        "fe" => ["fe1"]
      }
    end
  end



  # "hashicorp/precise32"
  # "dreamscapes/archlinux"
  # "terrywang/archlinux"
  # boxes at https://atlas.hashicorp.com/search.

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # config.vm.provider "virtualbox" do |vb|
  #  #   # Display the VirtualBox GUI when booting the machine
  #  #   vb.gui = true
  #  #
  #  #   # Customize the amount of memory on the VM:
  #  vb.memory = "1024"
  # end
  

  
  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL
end
